(defun solve-puzzle ()
  (with-temp-buffer
    (insert-file-contents "input.txt")
    (goto-char (point-min))
    (let ((max 0))
      (while (not (eobp))
        (let ((sum 0))
          (while (not (looking-at-p "[[:blank:]]*$"))
            (setq sum (+ sum (number-at-point)))
            (forward-line))
          (if (> sum max)
              (setq max sum))
          (forward-line)))
      max)))

(defun solve-part2 ()
  (with-temp-buffer
    (insert-file-contents "input.txt")
    (goto-char (point-min))
    (let ((list '()))
      (while (not (eobp))
        (let ((sum 0))
          (while (not (looking-at-p "[[:blank:]]*$"))
            (setq sum (+ sum (number-at-point)))
            (forward-line))
          (add-to-list 'list sum)
          (forward-line)))
      (setq list (sort list '>))
      (apply '+ (butlast list (- (length list) 3))))))

(message "%d" (solve-puzzle))
(message "%d" (solve-part2))
